 Generate and view a private key.
a.To generate a private key, use the openssl genpkey command. The command generates a private key using the RSA algorithm and outputs it to a file named private_key.pem.

	openssl genpkey -algorithm RSA -out private_key.pem


b.Use the cat command to view the private_key.pem.

	cat private_key.pem

----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDgIALWSd5vHuCz
z0ctfo/Zx9tBixuULCIHg8UatmoBjpQKS+45+wT1219hK1WbQpEj9LYAmtNAKLfB
ANm/m1ABbdLJ/8pnItbZ8P8C2gq0tTAqLvO7XJzZlcUzFnNObqigd0QFpdTAgfSr
PEn16DlBvEh3b0iwe/Xc03aPz3tt9os8ijVkyJUXIfmEG7PQaYqbnE8wSigQgzfZ
EZAGOS75nWtPIQciezmWkt9dmksIGZQmswdtmQD9dQVwPs7sv0agYXxuI8bzx/xi
+fXtQ9p1f0AFtsYUeoQJuNYUMWcRHihix0g3o6ciIN+YgLWbuWXCFgKKyb2cW8Ze
2Hlm4Cy9AgMBAAECggEAHGNRmKzglLiXg470mAmY1N/goKurAZiZctQ46gpC4RGb
JLa7ZPKrjSyNJzSi8jh7Q8+iIe96ZH0D0Vl3OzLD7npnoZhZnbim+BHzavwNMRhm
EmHCE3BGmbTDtpXYYw3XJAQXRJPdn8iWIf5P6+rPHclocGBTF6+L072hHdQM8T91
cZMlacWiNAOkk3LN7OZXLRLjSPf6s1v+tsz3Sw3E6OVS/ZOgtn1rHR30hculJwot
+CLviEnQYCGCiY1shhHJ1zAb93GOC1k91dDrwPF8q3sSj7oLyAKfyJr0M7qlWGB+
TAj8ccIBgBnYiskemjSQKYjqcIlB/9gu+9NBWuUfDQKBgQDzI9rndy3gZmxKJeuw
DIY1YSsgS7xRixv57Kr4NGDKxaljhXMK8UaidPISDbuRYpXY3pqO2HxbwQRJ+0kT
6CBeUjqIBvOBdhjJB2RvliDMdzcay8wtZexyRt286sYQeYUkQTZVRne38ECDPz+p
2S5HFm3/ayedsujp1tOf9Ck1rwKBgQDr+rDBFgC5Y4XVoxo6+jA+pBDkBL4U1m2v
Y4tR9583P8HzSFGsUFl0uodunHCRSYJ3hGPadewdPCKv86aASLxklv86fA0JmnLv
K2OjtDQe9MKjpOlJFT0PWTz1XeHaTsJpu0MoFjI3ufYNUWaBEGCsUGY7ZFp3tZIb
eYw63a7LUwKBgQC7iPtOLzGWdMmvw2HvzykxQPpXlbLyHl78vVv9x8CkhiMp3QOn
/AOkSJlx7V+wOp8jwEbsSPRafR0GxyhNj2xv8/KretkVEPb7D5WbL+uqaYV6SJj6
pzPhzOE41sjgaiqUlSwISCsNF+Valk1Pf3FfaWB8crUCwL0/p/Bg3p1uhwKBgBHP
H5vS30cefbE71/TvgMiZdTTgLsA/1pNP/em3uGphA3Aq2w8YGUg385SjddNhKtl+
QlLwZ1tleHCzALPZyW4F/0kYp5s77sSiD6kBJpXXfwD+pyR+19bas0EJTsw8+Wsl
WNIjqrKN9EXZCNVguQsIHk8JKdKy/03XhH/EzzZFAoGBANLfJkStPGdwFhVeYAb2
GtHcO+k08NOPQMtnSDdEZ4IFxZqElsX9i2eSRu4Ylm+eSivq8ktVRWyR7yMHUVdU
sbBEiMFFyGgd8HA78C5ZcIEdBgrzGCltquKBQq3Q9K+pAB6BsGJjeHEBida9mDI5
zhFbJJfY/E0x/3awr4JyvkDN
-----END PRIVATE KEY-----


Part 3: Generate and view a public key.
a.To generate a public key, use the openssl pkey command. The command takes your private_key.pem as an input, and then outputs a public key (-pubout -out) to a file called public_key.pem.

	openssl pkey -in private_key.pem -pubout -out public_key.pem



b.Use the cat command to view the public_key.pem.

	cat public_key.pem

-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4CAC1knebx7gs89HLX6P
2cfbQYsblCwiB4PFGrZqAY6UCkvuOfsE9dtfYStVm0KRI/S2AJrTQCi3wQDZv5tQ
AW3Syf/KZyLW2fD/AtoKtLUwKi7zu1yc2ZXFMxZzTm6ooHdEBaXUwIH0qzxJ9eg5
QbxId29IsHv13NN2j897bfaLPIo1ZMiVFyH5hBuz0GmKm5xPMEooEIM32RGQBjku
+Z1rTyEHIns5lpLfXZpLCBmUJrMHbZkA/XUFcD7O7L9GoGF8biPG88f8Yvn17UPa
dX9ABbbGFHqECbjWFDFnER4oYsdIN6OnIiDfmIC1m7llwhYCism9nFvGXth5ZuAs
vQIDAQAB
-----END PUBLIC KEY-----


Part 4: Create a new document that will be digitally signed.
a. Use the echo command to create a text file named letter.txt.

	echo "Hello friend this is secret message, and i have signed it." >> letter.txt

b.Use the cat command to view the contract.txt file.

	cat letter.txt

Hello friend this is secret message, and i have signed it.


Part 5: Use the private key to digitally sign the new document.
a. To sign the document, use the openssl dgst command. The dgst command can take any number of message digest values. In this example, you will use SHA 256, and then use private_key.pem to output a signature for the letter.txt document.

	openssl dgst -sha256 -sign private_key.pem -out signature letter.txt


b.Use the cat command to view the signature file. The file is a binary file. Press Enter to get a new command line.

	cat signature

  } ^ ▒ Xw Ac  Rk   ohJ7}   
  -    W   N j ]7 F9    Y}M G  [    #( 
 / z:  ]▒    $ Jr  u-.w." /F  y $D =   akEM E &8 w l y,"b~ hߖ   ;:4 / B[ ( q M_ȕ0  "7 c ▒     HA>Rm    "  z 8   *] _6S J  mSu . 2<   F \~6+F#ổ   >JA1D  ! ]G*ym `    E 

Part 6: Verify the authenticity and integrity of the document.
Digital signature technology allows the recipient to verify the file’s authenticity and integrity. The process of digital signature verification is to ensure that a given message has been signed by the private key that corresponds to a given public key.

To verify that the document is authentic and has not been tampered with, use the openssl dgst command with the verify option and the public_key.pem.

	 openssl dgst -sha256 -verify public_key.pem -signature signature letter.txt

	Verified OK


Part 7: Simulate a threat actor changing the specified recipient in the letter.txt file.
a. Use any editor you like to change the letter.txt file.

	vi contract.txt

b.Change Hello to Hi.

OR,
echo "Hi, friend this is secret message, and i have signed it." >> letter.txt


Part 8: Verify that the document's integrity has been compromised.
Reuse the openssl dgst command with the verify option to validate that the document's verification now fails.

	openssl dgst -sha256 -verify public_key.pem -signature signature letter.txt

	Verification Failure

